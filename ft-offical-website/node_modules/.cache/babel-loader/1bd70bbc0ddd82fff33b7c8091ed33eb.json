{"ast":null,"code":"var _jsxFileName = \"/Users/chengpeng/workspace/Ft-Official-Website/ft-offical-website/src/modules/delivery/JoinUs/paform.component.jsx\";\nimport React from 'react';\nimport VerificationCode from '../verificationcode/verification/verification.component';\nimport ReactValidator from './react-validator';\nimport SuccessModal from '../../home/recruitment/component/successModal/successModal.component';\nimport { Input } from 'antd';\nimport axios from 'axios';\nimport { FormattedMessage } from 'react-intl';\nimport './paform.component.style.css';\n\nclass PAForm extends React.Component {\n  constructor() {\n    super(); //1\n\n    this.handleChange = async event => {\n      //event.target  will  end  up  being  the  input  element  itself.  And  we  want  to  pull  off  the  'name  and  value'\n      const target = event.target;\n      const value = target.value;\n      const name = target.name;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = async event => {\n      if (this.validator.allValid()) {\n        this.props.getformVisibility(false);\n      } else {\n        this.validator.showMessages();\n        this.forceUpdate();\n      }\n\n      event.preventDefault();\n      var data = {\n        Country: this.state.Country,\n        Area: this.state.Area,\n        First_Name: this.state.First_Name,\n        Last_Name: this.state.Last_Name,\n        Mobile: this.state.Mobile,\n        Email: this.state.Email,\n        BName: this.state.BName,\n        Address: this.state.Address,\n        City: this.state.City,\n        PostalCode: this.state.PostalCode,\n        Category: this.state.Category,\n        Description: this.state.Description\n      };\n      console.log(data);\n      axios({\n        method: 'post',\n        url: 'http://localhost:3000/partner/add',\n        data: data\n      }).then(function (response) {\n        console.log(response);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    this.handleChange = event => {\n      //event.target  will  end  up  being  the  input  element  itself.  And  we  want  to  pull  off  the  'name  and  value'\n      const target = event.target;\n      const value = target.value;\n      const name = target.name;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleCheckbox = event => {\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n\n      if (!this.state[name].includes(value)) {\n        this.setState({\n          [name]: this.state[name].concat([value])\n        });\n      } //语法:this.state[name]\n      else {\n          this.setState({\n            [name]: this.state[name].filter(checkbox => checkbox != value)\n          });\n        }\n    };\n\n    this.showModal = () => {\n      if (this.validator.allValid()) {\n        this.setState({\n          modalVisible: true\n        });\n      }\n    };\n\n    this.state = {\n      Area: '',\n      First_Name: '',\n      Last_Name: '',\n      Mobile: '',\n      Email: '',\n      BName: '',\n      Address: '',\n      City: '',\n      PostalCode: '',\n      Category: '',\n      Description: '',\n      modalVisible: false,\n      formVisible: true,\n      flag: ''\n    };\n    this.updateflag = this.updateflag.bind(this);\n    this.GetVisibility = this.GetVisibility.bind(this);\n  }\n\n  componentWillMount() {\n    this.validator = new ReactValidator();\n  }\n\n  updateflag(val) {\n    this.setState({\n      flag: val\n    });\n  }\n\n  GetVisibility(visibility) {\n    this.setState({\n      modalVisible: visibility\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          Area = _this$state.Area,\n          First_Name = _this$state.First_Name,\n          Last_Name = _this$state.Last_Name,\n          Mobile = _this$state.Mobile,\n          Email = _this$state.Email,\n          BName = _this$state.BName,\n          Address = _this$state.Address,\n          City = _this$state.City,\n          PostalCode = _this$state.PostalCode,\n          Category = _this$state.Category,\n          Description = _this$state.Description,\n          flag = _this$state.flag;\n    return React.createElement(\"div\", {\n      className: \"Form_input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, this.state.formVisible ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"ft_partner_modal_title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(FormattedMessage, {\n      id: \"fd_partner_become_title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    })), React.createElement(\"hr\", {\n      style: {\n        'padding-bottom': '10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    })) : null, this.state.formVisible ? React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"fh_partner_label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(FormattedMessage, {\n      id: \"fd_partner_become_area\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    })), React.createElement(\"span\", {\n      className: \"ft_required_mark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"*\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), React.createElement(\"select\", {\n      className: \"ft_partner_select\",\n      name: \"Area\",\n      value: Area,\n      onChange: this.handleChange,\n      style: {\n        width: '242px',\n        background: 'white',\n        margin: '10px 0 35px 0'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"Great Vancouver\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"Great Vancouver\"), React.createElement(\"option\", {\n      value: \"Calgary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"Calgary\"), React.createElement(\"option\", {\n      value: \"Edmonton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"Edmonton\"), React.createElement(\"option\", {\n      value: \"Montreal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"Montreal\"), React.createElement(\"option\", {\n      value: \"Toronto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"Toronto\"), React.createElement(\"option\", {\n      value: \"Seattle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"Seattle\"), React.createElement(\"option\", {\n      value: \"New York\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \"New York\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"fh_partner_label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(FormattedMessage, {\n      id: \"fd_partner_become_name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    })), React.createElement(\"span\", {\n      className: \"ft_required_mark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, \"*\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"ft_partner_single_row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(Input, {\n      style: {\n        'width': '242px',\n        margin: '10px 0 0 0'\n      },\n      name: \"First_Name\",\n      value: First_Name,\n      onChange: this.handleChange,\n      placeholder: \"First Name\",\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }), this.validator.message('First Name', this.state.First_Name, 'required', '', {})), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(Input, {\n      style: {\n        'width': '242px',\n        margin: '10px 0 0 0'\n      },\n      name: \"Last_Name\",\n      value: Last_Name,\n      onChange: this.handleChange,\n      placeholder: \"Last Name\",\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }), this.validator.message('Last Name', this.state.Last_Name, 'required', '', {}))), React.createElement(\"div\", {\n      style: {\n        padding: '0 0 35px 0'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"fh_partner_label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(FormattedMessage, {\n      id: \"fd_partner_become_phone\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    })), React.createElement(\"span\", {\n      className: \"ft_required_mark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"*\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }), React.createElement(Input, {\n      style: {\n        'max-width': '497px',\n        margin: '10px 0 0 0'\n      },\n      name: \"Mobile\",\n      value: Mobile,\n      onChange: this.handleChange,\n      placeholder: \"Phone Number\",\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }), this.validator.message('Mobile', this.state.Mobile, 'required|phone', '', {}), React.createElement(\"div\", {\n      style: {\n        padding: '0 0 35px 0'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"fh_partner_label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(FormattedMessage, {\n      id: \"fd_partner_become_email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    })), React.createElement(\"span\", {\n      className: \"ft_required_mark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, \"*\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }), React.createElement(Input, {\n      style: {\n        'max-width': '497px',\n        margin: '10px 0 0 0'\n      },\n      name: \"Email\",\n      value: Email,\n      onChange: this.handleChange,\n      placeholder: \"Email Address\",\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }), this.validator.message('Email', this.state.Email, 'required|email', '', {}), React.createElement(\"div\", {\n      style: {\n        padding: '0 0 35px 0'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"fh_partner_label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(FormattedMessage, {\n      id: \"fd_partner_become_busname\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    })), React.createElement(\"span\", {\n      className: \"ft_required_mark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, \"*\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }), React.createElement(Input, {\n      style: {\n        'max-width': '497px',\n        margin: '10px 0 0 0'\n      },\n      name: \"BName\",\n      value: BName,\n      onChange: this.handleChange,\n      placeholder: \"Business Name\",\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }), this.validator.message('Business Name', this.state.BName, 'required', '', {}), React.createElement(\"div\", {\n      style: {\n        padding: '0 0 35px 0'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"fh_partner_label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(FormattedMessage, {\n      id: \"fd_partner_become_busadr\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    })), React.createElement(\"span\", {\n      className: \"ft_required_mark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \"*\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }), React.createElement(Input, {\n      style: {\n        'max-width': '497px',\n        margin: '10px 0 0 0'\n      },\n      name: \"Address\",\n      value: Address,\n      onChange: this.handleChange,\n      placeholder: \"Street Address\",\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }), this.validator.message('Address', this.state.Address, 'required', '', {}), React.createElement(\"div\", {\n      className: \"ft_partner_single_row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, React.createElement(Input, {\n      style: {\n        'width': '242px',\n        margin: '10px 0 0 0'\n      },\n      name: \"City\",\n      value: City,\n      onChange: this.handleChange,\n      placeholder: \"City\",\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }), this.validator.message('City', this.state.City, 'required', '', {})), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, React.createElement(Input, {\n      style: {\n        'width': '242px',\n        margin: '10px 0 0 0'\n      },\n      name: \"PostalCode\",\n      value: PostalCode,\n      onChange: this.handleChange,\n      placeholder: \"ZIP / Postal Code\",\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }), this.validator.message('PostalCode', this.state.PostalCode, 'required', '', {}))), React.createElement(\"div\", {\n      style: {\n        padding: '0 0 35px 0'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"fh_partner_label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(FormattedMessage, {\n      id: \"fd_partner_become_buscat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    })), React.createElement(\"span\", {\n      className: \"ft_required_mark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, \"*\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }), React.createElement(Input, {\n      style: {\n        'max-width': '497px',\n        margin: '10px 0 0 0'\n      },\n      name: \"Category\",\n      value: Category,\n      onChange: this.handleChange,\n      placeholder: \"Business Category\",\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }), this.validator.message('Category', this.state.Category, 'required', '', {}), React.createElement(\"div\", {\n      style: {\n        padding: '0 0 35px 0'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"fh_partner_label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, React.createElement(FormattedMessage, {\n      id: \"fd_partner_become_Desc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        'padding-top': '10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }), React.createElement(\"textarea\", {\n      className: \"ft_partner_textarea\",\n      name: \"Description\",\n      value: Description,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"ft_partner_verificode\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"fh_partner_label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, React.createElement(FormattedMessage, {\n      id: \"fd_partner_become_inputcode\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    })), React.createElement(\"span\", {\n      className: \"ft_required_mark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, \"*\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }), React.createElement(VerificationCode, {\n      flagupdate: this.updateflag,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }), this.validator.message('Verification code', this.state.flag, 'required', '', {\n      required: 'Please input code correctly.'\n    })), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: this.showModal,\n      className: \"ft_driver_submit_button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, \"Submit\"), this.state.modalVisible ? React.createElement(SuccessModal, {\n      getVisibility: this.GetVisibility,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }) : null) : null);\n  }\n\n}\n\nexport default PAForm;","map":{"version":3,"sources":["/Users/chengpeng/workspace/Ft-Official-Website/ft-offical-website/src/modules/delivery/JoinUs/paform.component.jsx"],"names":["React","VerificationCode","ReactValidator","SuccessModal","Input","axios","FormattedMessage","PAForm","Component","constructor","handleChange","event","target","value","name","setState","handleSubmit","validator","allValid","props","getformVisibility","showMessages","forceUpdate","preventDefault","data","Country","state","Area","First_Name","Last_Name","Mobile","Email","BName","Address","City","PostalCode","Category","Description","console","log","method","url","then","response","catch","error","handleCheckbox","includes","concat","filter","checkbox","showModal","modalVisible","formVisible","flag","updateflag","bind","GetVisibility","componentWillMount","val","visibility","render","width","background","margin","message","padding","required"],"mappings":"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","sourcesContent":["import React  from  'react';\nimport VerificationCode from '../verificationcode/verification/verification.component';  \nimport ReactValidator from './react-validator';\nimport SuccessModal from '../../home/recruitment/component/successModal/successModal.component';\nimport { Input }  from  'antd';\nimport  axios  from  'axios';\nimport { FormattedMessage } from 'react-intl';\n\nimport './paform.component.style.css';\n\nclass  PAForm  extends  React.Component    {\n        constructor(){\n                super();\n                //1\n                this.state  ={\n                        Area:  '',\n                        First_Name:  '',\n                        Last_Name:  '',\n                        Mobile:'',\n                        Email:  '',\n                        BName:  '',\n                        Address:  '',\n                        City:  '',\n                        PostalCode:  '',\n                        Category:  '',\n                        Description:'',\n                        modalVisible: false,\n                        formVisible: true,\n                        flag: '',                \n                    }\n                this.updateflag = this.updateflag.bind(this);\n                this.GetVisibility=this.GetVisibility.bind(this);\n        }\n\n    handleChange  =  async  event  =>  {\n        //event.target  will  end  up  being  the  input  element  itself.  And  we  want  to  pull  off  the  'name  and  value'\n        const  target  =  event.target;\n        const  value  =  target.value;\n        const  name  =  target.name;\n        this.setState({\n                [name]:  value\n            });\n    };\n\n    componentWillMount() {\n        this.validator = new ReactValidator();\n    }\n\n        handleSubmit  =  async  event  =>{\n            if( this.validator.allValid() ){\n                this.props.getformVisibility(false)\n            } else {\n                this.validator.showMessages();\n                this.forceUpdate();\n            }\n\n                event.preventDefault();\n                var  data  =  {\n                        Country: this.state.Country,\n                        Area: this.state.Area,\n                        First_Name: this.state.First_Name,\n                        Last_Name: this.state.Last_Name,\n                        Mobile: this.state.Mobile,\n                        Email: this.state.Email,\n                        BName: this.state.BName,\n                        Address: this.state.Address,\n                        City: this.state.City,\n                        PostalCode: this.state.PostalCode,\n                        Category: this.state.Category,\n                        Description: this.state.Description\n                }\n                console.log(data);\n                axios({\n                      method:  'post'  ,\n                      url:  'http://localhost:3000/partner/add'  ,\n                      data:  data\n                })\n                .then(function  (response)  {\n                        console.log(response);\n                    })\n                .catch(function  (error)  {\n                        console.log(error);\n                    });             \n        };\n\n        handleChange  =  event  =>  {\n                //event.target  will  end  up  being  the  input  element  itself.  And  we  want  to  pull  off  the  'name  and  value'\n                const  target  =  event.target;\n                const  value  =  target.value;\n                const  name  =  target.name;\n                this.setState({\n                        [name]:  value\n                    });\n        };\n\n        handleCheckbox  =  event  =>  {\n                const{name,value}  =  event.target;\n        if(!this.state[name].includes(value)){\n            this.setState({[name]:this.state[name].concat([value])}) }//语法:this.state[name]\n        else{\n            this.setState({[name]:this.state[name].filter(checkbox => (checkbox != value))})\n        }\n    }\n\n    updateflag (val) {\n        this.setState({\n            flag: val,\n        })\n    }\n\n    showModal = () => {\n        if (this.validator.allValid()) {\n            this.setState({\n                modalVisible: true,\n            });\n        }\n    }\n\n    GetVisibility(visibility){\n        this.setState({modalVisible:visibility})\n    }\n\n    render() {\n        const { Area, First_Name, Last_Name, Mobile, Email, BName, Address, City, PostalCode, Category, Description, flag } = this.state;\n        \n        return(\n            <div className='Form_input'>\n                {\n                    this.state.formVisible?\n                    <div>\n                        <p className='ft_partner_modal_title'><FormattedMessage id=\"fd_partner_become_title\"/></p>\n                        <hr style={{'padding-bottom':'10px'}} />\n                    </div>:null\n                }\n                {\n                    this.state.formVisible?\n                    <form onSubmit={this.handleSubmit}>\n                        <span className='fh_partner_label'><FormattedMessage id=\"fd_partner_become_area\"/></span><span className='ft_required_mark'>*</span>                      \n                        <br/>\n                        <select\n                            className='ft_partner_select'\n                            name='Area'\n                            value={Area}\n                            onChange={this.handleChange}\n                            style={{width: '242px', \n                                    background: 'white',\n                                    margin: '10px 0 35px 0'\n                                    }}\n                        >\n                            <option value=\"Great Vancouver\">Great Vancouver</option>\n                            <option value=\"Calgary\">Calgary</option>\n                            <option value=\"Edmonton\">Edmonton</option> \n                            <option value=\"Montreal\">Montreal</option>\n                            <option value=\"Toronto\">Toronto</option> \n                            <option value=\"Seattle\">Seattle</option>\n                            <option value=\"New York\">New York</option>\n                        </select>\n                        <br />\n                        \n                        <span className='fh_partner_label'><FormattedMessage id=\"fd_partner_become_name\"/></span><span className='ft_required_mark'>*</span><br/>\n                            <div className='ft_partner_single_row'>\n                            <div>\n                                    <Input style={{'width':'242px', margin: '10px 0 0 0'}} name='First_Name' value={First_Name} onChange={this.handleChange} placeholder='First Name' size='large'></Input>\n                                    {this.validator.message('First Name', this.state.First_Name, 'required','',{})}\n                                </div>\n                                <div>\n                                    <Input style={{'width':'242px', margin: '10px 0 0 0'}} name='Last_Name' value={Last_Name} onChange={this.handleChange} placeholder='Last Name' size='large'></Input>\n                                    {this.validator.message('Last Name', this.state.Last_Name, 'required','',{})}\n                                </div>                            \n                            </div>\n                        <div style={{padding: '0 0 35px 0'}} />\n                        \n                        <span className='fh_partner_label'><FormattedMessage id=\"fd_partner_become_phone\"/></span><span className='ft_required_mark'>*</span><br/>\n                            <Input style={{'max-width':'497px', margin: '10px 0 0 0'}} name='Mobile' value={Mobile} onChange={this.handleChange} placeholder='Phone Number' size='large'></Input>\n                            {this.validator.message('Mobile', this.state.Mobile, 'required|phone','',{})}\n                        <div style={{padding: '0 0 35px 0'}} />\n\n                        <span className='fh_partner_label'><FormattedMessage id=\"fd_partner_become_email\"/></span><span className='ft_required_mark'>*</span><br/>\n                            <Input style={{'max-width':'497px', margin: '10px 0 0 0'}} name='Email' value={Email} onChange={this.handleChange} placeholder='Email Address' size='large'></Input>\n                            {this.validator.message('Email', this.state.Email, 'required|email','',{})}\n                        <div style={{padding: '0 0 35px 0'}} />\n\n                        <span className='fh_partner_label'><FormattedMessage id=\"fd_partner_become_busname\"/></span><span className='ft_required_mark'>*</span><br/>\n                            <Input style={{'max-width':'497px', margin: '10px 0 0 0'}} name='BName' value={BName} onChange={this.handleChange} placeholder='Business Name' size='large'></Input>\n                            {this.validator.message('Business Name', this.state.BName, 'required','',{})}\n                        <div style={{padding: '0 0 35px 0'}} />\n\n                        <span className='fh_partner_label'><FormattedMessage id=\"fd_partner_become_busadr\"/></span><span className='ft_required_mark'>*</span><br/>\n                            <Input style={{'max-width':'497px', margin: '10px 0 0 0'}} name='Address' value={Address} onChange={this.handleChange} placeholder='Street Address' size='large'></Input>\n                            {this.validator.message('Address', this.state.Address, 'required','',{})}\n                            <div className='ft_partner_single_row'>\n                                <div>\n                                    <Input style={{'width':'242px', margin: '10px 0 0 0'}} name='City' value={City} onChange={this.handleChange} placeholder='City' size='large'></Input>\n                                    {this.validator.message('City', this.state.City, 'required','',{})}\n                                </div>\n                                <div>\n                                    <Input style={{'width':'242px', margin: '10px 0 0 0'}} name='PostalCode' value={PostalCode} onChange={this.handleChange} placeholder='ZIP / Postal Code' size='large'></Input>\n                                    {this.validator.message('PostalCode', this.state.PostalCode, 'required','',{})}\n                                </div>                            \n                            </div>\n                        <div style={{padding: '0 0 35px 0'}} />\n\n                        <span className='fh_partner_label'><FormattedMessage id=\"fd_partner_become_buscat\"/></span><span className='ft_required_mark'>*</span><br/>\n                            <Input style={{'max-width':'497px', margin: '10px 0 0 0'}} name='Category' value={Category} onChange={this.handleChange} placeholder='Business Category' size='large'></Input>\n                            {this.validator.message('Category', this.state.Category, 'required','',{})}\n                        <div style={{padding: '0 0 35px 0'}} />\n\n                        <div>\n                            <span className='fh_partner_label'><FormattedMessage id=\"fd_partner_become_Desc\"/></span>\n                            <br />\n                            <div style={{'padding-top':'10px'}} />\n                            <textarea className='ft_partner_textarea' name='Description' value={Description} onChange={this.handleChange}/>\n                        </div>\n\n                        <div className='ft_partner_verificode'>\n                            <span className='fh_partner_label'><FormattedMessage id=\"fd_partner_become_inputcode\"/></span><span className='ft_required_mark'>*</span><br/>\n                            <VerificationCode flagupdate={this.updateflag} />\n                            {this.validator.message('Verification code', this.state.flag, 'required','',{\n                                required:'Please input code correctly.'\n                            })}\n                        </div>\n                        <hr />\n                        \n                        <button type='submit' onClick={this.showModal} className='ft_driver_submit_button'>Submit</button>\n                        {this.state.modalVisible?<SuccessModal getVisibility={this.GetVisibility}/>:null}  \n                    </form>:null\n                }\n            </div>\n        );\n    }\n}\nexport default PAForm;"]},"metadata":{},"sourceType":"module"}