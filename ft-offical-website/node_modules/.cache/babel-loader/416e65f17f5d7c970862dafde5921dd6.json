{"ast":null,"code":"import { filterProps, createError } from '../utils';\nconst PLURAL_FORMAT_OPTIONS = ['localeMatcher', 'type'];\nexport function formatPlural({\n  locale,\n  onError\n}, getPluralRules, value, options = {}) {\n  if (!Intl.PluralRules) {\n    onError(createError(`Intl.PluralRules is not available in this environment.\nTry polyfilling it using \"@formatjs/intl-pluralrules\"\n`));\n  }\n\n  const filteredOptions = filterProps(options, PLURAL_FORMAT_OPTIONS);\n\n  try {\n    return getPluralRules(locale, filteredOptions).select(value);\n  } catch (e) {\n    onError(createError('Error formatting plural.', e));\n  }\n\n  return 'other';\n}","map":{"version":3,"sources":["/Users/chengpeng/workspace/Ft-Official-Website/ft-offical-website/node_modules/react-intl/lib/formatters/plural.js"],"names":["filterProps","createError","PLURAL_FORMAT_OPTIONS","formatPlural","locale","onError","getPluralRules","value","options","Intl","PluralRules","filteredOptions","select","e"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,UAAzC;AACA,MAAMC,qBAAqB,GAAG,CAC1B,eAD0B,EAE1B,MAF0B,CAA9B;AAIA,OAAO,SAASC,YAAT,CAAsB;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAtB,EAA2CC,cAA3C,EAA2DC,KAA3D,EAAkEC,OAAO,GAAG,EAA5E,EAAgF;AACnF,MAAI,CAACC,IAAI,CAACC,WAAV,EAAuB;AACnBL,IAAAA,OAAO,CAACJ,WAAW,CAAE;;CAAF,CAAZ,CAAP;AAGH;;AACD,QAAMU,eAAe,GAAGX,WAAW,CAACQ,OAAD,EAAUN,qBAAV,CAAnC;;AACA,MAAI;AACA,WAAOI,cAAc,CAACF,MAAD,EAASO,eAAT,CAAd,CAAwCC,MAAxC,CAA+CL,KAA/C,CAAP;AACH,GAFD,CAGA,OAAOM,CAAP,EAAU;AACNR,IAAAA,OAAO,CAACJ,WAAW,CAAC,0BAAD,EAA6BY,CAA7B,CAAZ,CAAP;AACH;;AACD,SAAO,OAAP;AACH","sourcesContent":["import { filterProps, createError } from '../utils';\nconst PLURAL_FORMAT_OPTIONS = [\n    'localeMatcher',\n    'type',\n];\nexport function formatPlural({ locale, onError }, getPluralRules, value, options = {}) {\n    if (!Intl.PluralRules) {\n        onError(createError(`Intl.PluralRules is not available in this environment.\nTry polyfilling it using \"@formatjs/intl-pluralrules\"\n`));\n    }\n    const filteredOptions = filterProps(options, PLURAL_FORMAT_OPTIONS);\n    try {\n        return getPluralRules(locale, filteredOptions).select(value);\n    }\n    catch (e) {\n        onError(createError('Error formatting plural.', e));\n    }\n    return 'other';\n}\n"]},"metadata":{},"sourceType":"module"}